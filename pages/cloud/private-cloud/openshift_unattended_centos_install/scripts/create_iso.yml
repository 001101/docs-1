---
- name: Recipe to create unattended install centos iso file
  hosts: localhost
  tasks:

  - name: Set 7z package name
    set_fact:
        p7zip: p7zip

  - name: Set 7z package name (Debian)
    set_fact:
        p7zip: p7zip-full
    when: ansible_os_family == 'Debian'

  - name: Set 7z package name (RedHat)
    set_fact:
        p7zip: p7zip-plugins
    when: ansible_os_family == 'RedHat'

  - name: Install packages
    package:
      name:
        - "{{ p7zip }}"
        - genisoimage
        - isomd5sum
      state: present

  - name: Check that the iso is downloaded
    stat:
      path: "{{ playbook_dir }}/centos_install.iso"
    register: centos_install

  - name: Download Centos installation iso file (might take a while)
    get_url:
      url: "{{centos_mirror}}{{centos_install_iso}}"
      dest: "{{ playbook_dir }}/centos_install.iso"
      mode: 0440
    when: centos_install.stat.exists == False

  - name: Clean artifact path
    file:
      state: absent
      path: "{{ playbook_dir }}/centos_install"

  - name: Extract files from iso
    command: 7z x -y -o"{{ playbook_dir }}/centos_install" "{{ playbook_dir }}/centos_install.iso"

  - name: Generate Kickstart file
    template:
      src: "{{ playbook_dir }}/kickstart.cfg.j2"
      dest: "{{ playbook_dir }}/centos_install/ks.cfg"

  - name: Check for open-vm-tools packages
    find:
      path: "{{ playbook_dir }}/centos_install/Packages/"
      patterns: 'open-vm-tools-*.rpm'
    register: open_vm_tools

  - fail: msg="open-vm-tools package not found under {{ playbook_dir }}/centos_install/Packages/"
    when: open_vm_tools.matched == 0

  # - name: Editing BIOS isolinux.cfg file - timeout
  #   lineinfile:
  #     path: "{{ playbook_dir }}/centos_install/isolinux/isolinux.cfg"
  #     regexp: '^timeout'
  #     line: 'timeout 100'

  - name: Editing BIOS isolinux.cfg file - inst.ks
    replace:
      path: "{{ playbook_dir }}/centos_install/isolinux/isolinux.cfg"
      before: 'label linux'
      after: 'label check'
      regexp: '^(\s*append.*)$'
      replace: '\1 inst.ks=cdrom:/dev/cdrom:/ks.cfg'

  - name: Extracting volume label
    shell: cat "{{ playbook_dir }}/centos_install/isolinux/isolinux.cfg" | grep '/ks.cfg$' | grep 'LABEL=' | sed 's/^.*LABEL=\([^ ]*\).*$/\1/' | sed 's/\\x20/ /g'
    register: disk_label

  - name: Set volume label
    set_fact:
      disk_label: "{{ disk_label.stdout | default('linux', true) }}"

  - name: Create iso file
    command: chdir="{{ playbook_dir }}/centos_install/" genisoimage -o "{{ playbook_dir }}/{{ unattended_install_iso }}" -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -J -R -T -V "{{ disk_label }}" .

  # - name: Create iso file
  #   command: chdir="{{ playbook_dir }}/centos_install/" genisoimage -o "{{ playbook_dir }}/{{ unattended_install_iso }}" -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -J -R -T .

  - name: Embed MD5 checksum to iso file
    command: implantisomd5 "{{ playbook_dir }}/{{ unattended_install_iso }}"
